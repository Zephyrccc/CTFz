# Generated by Django 4.1.7 on 2023-04-25 12:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='分类名')),
            ],
            options={
                'verbose_name': '题目分类',
                'verbose_name_plural': '题目分类',
                'db_table': 'ctfz_category',
            },
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='题目名称')),
                ('environment_type', models.BooleanField(choices=[(True, '动态'), (False, '静态')], default=False, verbose_name='环境类型')),
                ('describe', models.CharField(blank=True, max_length=256, verbose_name='描述')),
                ('score', models.PositiveIntegerField(default=1, verbose_name='分值')),
                ('difficulty', models.FloatField(default=1.0, validators=[django.core.validators.MaxValueValidator(5.0), django.core.validators.MinValueValidator(0.0)], verbose_name='难度')),
                ('status', models.BooleanField(choices=[(True, '开放'), (False, '隐藏')], default=True, verbose_name='状态')),
                ('flag', models.CharField(blank=True, help_text='若为静态环境请设置此项', max_length=128, verbose_name='固定题目的flag')),
                ('attachment', models.FileField(blank=True, help_text='若有附件请设置此项', upload_to='attachments/', verbose_name='附件')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='题目创建时间')),
                ('category', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='CTFz.category', verbose_name='题目分类')),
            ],
            options={
                'verbose_name': '题目',
                'verbose_name_plural': '题目',
                'db_table': 'ctfz_challenge',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='http://127.0.0.1', max_length=256, verbose_name='地址')),
            ],
            options={
                'verbose_name': '主机地址',
                'verbose_name_plural': '主机地址',
                'db_table': 'ctfz_host',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=64, verbose_name='标签名')),
            ],
            options={
                'verbose_name': '标签分类',
                'verbose_name_plural': '标签分类',
                'db_table': 'ctfz_tag',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='名称')),
                ('declare', models.CharField(blank=True, max_length=32, verbose_name='宣言')),
                ('describe', models.CharField(blank=True, max_length=256, verbose_name='简介')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '团队',
                'verbose_name_plural': '团队',
                'db_table': 'ctfz_team',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='用户名')),
                ('describe', models.CharField(default='这家伙很懒什么也没留下...', max_length=254, verbose_name='个人介绍')),
                ('total_score', models.PositiveIntegerField(default=0, verbose_name='总分')),
                ('is_active', models.BooleanField(choices=[(True, '正常'), (False, '封禁')], default=True, verbose_name='账号状态')),
                ('is_admin', models.BooleanField(default=False, verbose_name='是否是管理员')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('team', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='member', to='CTFz.team', verbose_name='团队')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'ctfz_user',
            },
        ),
        migrations.CreateModel(
            name='TeamApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('status', models.IntegerField(choices=[(0, '拒绝'), (1, '允许'), (2, '未操作')], default=2, verbose_name='操作状态')),
                ('team', models.ForeignKey(blank=True, db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='t_team_application', to='CTFz.team', verbose_name='团队')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='u_team_application', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '申请记录',
                'verbose_name_plural': '申请记录',
                'db_table': 'ctfz_team_application',
            },
        ),
        migrations.AddField(
            model_name='team',
            name='captain',
            field=models.OneToOneField(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='captain_team', to=settings.AUTH_USER_MODEL, verbose_name='队长'),
        ),
        migrations.CreateModel(
            name='SolveRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('challenge', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='c_solve_record', to='CTFz.challenge', verbose_name='题目')),
                ('user', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='u_solve_record', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '解题成功记录',
                'verbose_name_plural': '解题成功记录',
                'db_table': 'ctfz_solve_record',
            },
        ),
        migrations.CreateModel(
            name='FailRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('challenge', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='c_fail_record', to='CTFz.challenge', verbose_name='题目')),
                ('user', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='u_fail_record', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '解题失败记录',
                'verbose_name_plural': '解题失败记录',
                'db_table': 'ctfz_fail_record',
            },
        ),
        migrations.CreateModel(
            name='DockerContainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('container_id', models.CharField(max_length=128, verbose_name='容器id')),
                ('flag', models.CharField(max_length=128, verbose_name='flag')),
                ('port', models.PositiveIntegerField(default=0, verbose_name='映射端口')),
                ('time_limit', models.PositiveIntegerField(default=7200, verbose_name='时间限制')),
                ('status', models.BooleanField(choices=[(False, '关闭'), (True, '开启')], default=True, verbose_name='靶机状态')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('challenge', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='c_docker_container', to='CTFz.challenge', verbose_name='题目')),
                ('user', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='u_docker_container', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '靶机容器',
                'verbose_name_plural': '靶机容器',
                'db_table': 'ctfz_docker_container',
            },
        ),
        migrations.CreateModel(
            name='ChallengeDockerConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_name', models.CharField(help_text='动态环境请设置此项', max_length=128, unique=True, verbose_name='镜像名')),
                ('container_port', models.PositiveIntegerField(default=80, help_text='动态环境请设置此项', verbose_name='容器端口')),
                ('cpu_limit', models.FloatField(default=0.5, help_text='动态环境请设置此项', verbose_name='CPU限制')),
                ('memory_limit', models.CharField(default='128m', help_text='动态环境请设置此项', max_length=64, verbose_name='内存限制')),
                ('time_limit', models.PositiveIntegerField(default=7200, help_text='动态环境请设置此项(单位秒)', verbose_name='时间限制')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('challenge', models.OneToOneField(db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='docker_config', to='CTFz.challenge', verbose_name='容器配置')),
            ],
            options={
                'verbose_name': '题目容器配置',
                'verbose_name_plural': '题目容器配置',
                'db_table': 'ctfz_challenge_docker_config',
            },
        ),
        migrations.CreateModel(
            name='ChallengeComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=256, verbose_name='评论')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('challenge', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='c_challenge_comment', to='CTFz.challenge', verbose_name='题目')),
                ('user', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, related_name='u_challenge_comment', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '题目评论',
                'verbose_name_plural': '题目评论',
                'db_table': 'ctfz_challenge_comment',
            },
        ),
        migrations.AddField(
            model_name='challenge',
            name='tag',
            field=models.ManyToManyField(blank=True, db_constraint=False, to='CTFz.tag', verbose_name='标签'),
        ),
    ]
